@model ResultIndexResponseViewModel
    <ol class="govuk-list govuk-!-margin-bottom-2" id="app-results-list">
        @foreach (var item in Model.Results.JobCategories)
        {
            <li class="app-results__item" data-job-family-code="@item.JobFamilyCode">
                <div class="govuk-grid-row">
                    <div class="govuk-grid-column-two-thirds">
                        <h3 class="govuk-heading-m"><a href="https://nationalcareers.service.gov.uk/job-categories/@item.JobFamilyNameUrl">@item.JobFamilyName</a></h3>
                        <p>@item.JobFamilyText</p>
                        <p class="app-noprint">Answer some more questions to find job roles you might be suited to in @item.JobFamilyName.</p>
                        @if (item.NumberOfMatchedJobProfile > 0)
                        {
                            <a role="button" class="govuk-button app-button" asp-controller="results" asp-action="roles" asp-route-id="@item.JobFamilyUrl" draggable="false">View results</a>
                        }
                        else
                        {
                            <a role="button" draggable="false" class="govuk-button app-button" asp-route="filterquestions" asp-route-assessmenttype="@Model.Results.AssessmentType" asp-route-jobCategoryName="@item.JobFamilyUrl" asp-route-questionNumber="1">
                                Answer @item.TotalQuestions more question@{if (item.TotalQuestions > 0)@("s")}
                                <span class="visually-hidden"> for @item.JobFamilyName</span>
                            </a>
                        }
                        <hr>
                    </div>
                </div>
            </li>
        }
    </ol>
